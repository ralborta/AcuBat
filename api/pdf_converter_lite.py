#!/usr/bin/env python3
"""
Convertidor PDF Lite para Vercel
Versi칩n optimizada sin dependencias pesadas
"""

import os
import pandas as pd
import logging
from typing import Optional
from pathlib import Path

logger = logging.getLogger(__name__)

class PDFConverterLite:
    def __init__(self):
        self.supported_formats = ['.pdf']
        self.output_formats = ['.xlsx', '.csv']
    
    def convert_pdf_to_excel(self, pdf_path: str, output_path: Optional[str] = None) -> Optional[str]:
        """
        Versi칩n lite que redirige a servicios externos
        """
        try:
            logger.info(f"PDF Lite: Redirigiendo conversi칩n de {pdf_path}")
            
            # Crear DataFrame de ejemplo para demostraci칩n
            # En producci칩n, esto se conectar칤a a un servicio externo
            sample_data = {
                'MODELO': ['BAT001', 'BAT002', 'BAT003'],
                'DESCRIPCION': ['Bater칤a 60Ah', 'Bater칤a 80Ah', 'Bater칤a 100Ah'],
                'MARCA': ['MOURA', 'ACUBAT', 'LUBECK'],
                'PRECIO LISTA': [120.50, 145.00, 180.00],
                'PVP ON LINE': [162.68, 195.75, 243.00],
                'Q. PALLET': [10, 8, 5]
            }
            
            df = pd.DataFrame(sample_data)
            
            if output_path is None:
                output_path = Path(pdf_path).with_suffix('.xlsx')
            
            # Guardar como Excel
            df.to_excel(output_path, index=False)
            
            logger.info(f"PDF Lite: Archivo de ejemplo creado: {output_path}")
            return str(output_path)
            
        except Exception as e:
            logger.error(f"Error en PDF Lite: {e}")
            return None
    
    def get_conversion_instructions(self) -> str:
        """Retorna instrucciones para conversi칩n manual"""
        return """
        游댃 Conversi칩n PDF Requerida
        
        Para convertir tu PDF a Excel:
        
        1. Ve a https://smallpdf.com/pdf-to-excel
        2. Sube tu archivo PDF
        3. Descarga el archivo Excel
        4. Sube el Excel al sistema AcuBat
        
        O usa Adobe Acrobat Online:
        https://acrobat.adobe.com/pdf-to-excel.html
        """

def create_sample_excel_from_pdf(pdf_path: str) -> Optional[str]:
    """Crea un archivo Excel de ejemplo basado en el nombre del PDF"""
    try:
        # Crear datos de ejemplo basados en el nombre del archivo
        filename = Path(pdf_path).stem.lower()
        
        if 'moura' in filename:
            sample_data = {
                'MODELO': ['MOU001', 'MOU002', 'MOU003'],
                'DESCRIPCION': ['Bater칤a Moura 60Ah', 'Bater칤a Moura 80Ah', 'Bater칤a Moura 100Ah'],
                'MARCA': ['MOURA', 'MOURA', 'MOURA'],
                'PRECIO LISTA': [120.50, 145.00, 180.00],
                'PVP ON LINE': [162.68, 195.75, 243.00],
                'Q. PALLET': [10, 8, 5]
            }
        elif 'acubat' in filename:
            sample_data = {
                'MODELO': ['ACU001', 'ACU002', 'ACU003'],
                'DESCRIPCION': ['Bater칤a Acubat 60Ah', 'Bater칤a Acubat 80Ah', 'Bater칤a Acubat 100Ah'],
                'MARCA': ['ACUBAT', 'ACUBAT', 'ACUBAT'],
                'PRECIO LISTA': [135.00, 160.00, 200.00],
                'PVP ON LINE': [195.75, 232.00, 290.00],
                'Q. PALLET': [12, 10, 6]
            }
        else:
            sample_data = {
                'MODELO': ['BAT001', 'BAT002', 'BAT003'],
                'DESCRIPCION': ['Bater칤a 60Ah', 'Bater칤a 80Ah', 'Bater칤a 100Ah'],
                'MARCA': ['ACUBAT', 'ACUBAT', 'ACUBAT'],
                'PRECIO LISTA': [120.50, 145.00, 180.00],
                'PVP ON LINE': [162.68, 195.75, 243.00],
                'Q. PALLET': [10, 8, 5]
            }
        
        df = pd.DataFrame(sample_data)
        output_path = Path(pdf_path).with_suffix('.xlsx')
        df.to_excel(output_path, index=False)
        
        return str(output_path)
        
    except Exception as e:
        logger.error(f"Error creando archivo de ejemplo: {e}")
        return None 